#!/usr/bin/perl
use strict ; use warnings ; 
use feature 'say' ;
use File::Find ; 
use Filesys::DiskUsage qw [ du ] ; 
use Getopt::Std ; getopts ',:' , \my %o ; 
use POSIX qw [ strftime ] ; 
use List::Util qw[ max sum0 ] ;
binmode STDOUT , ':utf8' ;
$ARGV[0] //= '.' ; 
$o{b} //= 512 ;

sub d3 ($) { $_[0] =~ s/(?<=\d)(?=(\d\d\d)+($|\D))/,/gr } ; # 数を3桁区切りに変換する。
* d3 = sub ($) { $_[0] } if 0 eq ( $o{','} // '') ; # -,0が指定されたら3桁区切りにしない。
sub sumdu (@) { sum0 map { my @s = stat $_ ; max ( $s[7] , $o{b} * $s[12] ) } @_ } 

my $dt = strftime ( '%Y-%m-%d(%a) %H:%M:%S %Z(%z)', localtime () ) ; 
my $c1 = do { use File::Spec ; File::Spec -> catfile ( File::Spec -> curdir() , '' ) } ; # "./" ただし移植性のため。
my $c2 = do { use File::Spec ; File::Spec -> catfile ( '' , '.' ) } ; # ディレクトリ階層の区切りの直後にドットがあるパターン
& change_dir ( $ARGV[0] ) ; # $ARGV[1] // '.' としても良かったが、cronで実行されるので、ディレクトリ名は必ず指定する癖を作業者に付けさせる。
my @files = split/\n/ , qx [ find . ] , 0 ;
my @visible = grep { ! m/\Q$c2\E/ } @files ;
my ($b1, $b2) = ( sumdu (@files), sumdu (@visible) ) ; 
say join " ", d3 $b1, scalar @files, d3 $b2 , scalar @visible, sprintf('%0.3f',$b1/$b2) , $dt  ; 


exit ;

sub change_dir ( $ ) {
  my $pwd =  qx[ cd $_[0] && pwd ] =~ s/\n$//r ; #  Perlのchdirはbashのようなチルダ展開が出来ない。
  die BRIGHT_RED BOLD qq[Failed: "cd $_[0]"] if $? ;
  chdir $pwd or die qq [Failed: "chdir $pwd"] ; # 
}

#   2022-03-01 thu ; Toshiyuki Shimono 下野寿之 (統計数理研究所 特任研究員)

## ヘルプの扱い
sub VERSION_MESSAGE {}
sub HELP_MESSAGE {
  use FindBin qw[ $Script ] ; 
  $ARGV[1] //= '' ;
  open my $FH , '<' , $0 ;
  while(<$FH>){
    s/\$0/$Script/g ;
    print $_ if s/^=head1// .. s/^=cut// and $ARGV[1] =~ /^o(p(t(i(o(ns?)?)?)?)?)?$/i ? m/^\s+\-/ : 1;
  }
  close $FH ;
  exit 0 ;
}

=encoding utf8

=head1 

  $0 dirname
  
 機能: 

   指定したフォルダに対して、ディスク使用量とそのフォルダ内で辿れるファイルの
  サイズのそれぞれ合計（共にバイト単位）などを標準出力に出力する。
  コマンドオプションにより、その出力をコミットメッセージにした Git の
    コミットに残すこともできる。

 オプション: 

    -, 0 : 千進法の3桁区切りのコンマを打たない。
    -b 512 : 各ファイルの占有するブロックサイズを取得して、それを何倍にすることで占有サイズと見なすかの、倍率。

 作成した目的: 
  
  データファイルを蓄えていくＧｉｔのレポジトリの、ディスク占有サイズのバイト数を、
  ワークツリー内の指定フォルダー内のファイルサイズの合計バイト数、および、
  その合計値に対する占有サイズの倍率と共に記録する。
  このことで、必要なディスクサイズの成長を見積もる。


=cut